namespace CodeAnalysis.Binding;

internal enum BoundKind
{
    Unbound,

    CompilationUnit,

    NeverExpression,

    IdentifierNameExpression,

    I32LiteralExpression,
    U32LiteralExpression,
    I64LiteralExpression,
    U64LiteralExpression,
    F32LiteralExpression,
    F64LiteralExpression,
    StrLiteralExpression,
    TrueLiteralExpression,
    FalseLiteralExpression,
    NullLiteralExpression,

    GroupExpression,
    SimpleAssignmentExpression,
    AddAssignmentExpression,
    SubtractAssignmentExpression,
    MultiplyAssignmentExpression,
    DivideAssignmentExpression,
    ModuloAssignmentExpression,
    PowerAssignmentExpression,
    AndAssignmentExpression,
    ExclusiveOrAssignmentExpression,
    OrAssignmentExpression,
    LeftShiftAssignmentExpression,
    RightShiftAssignmentExpression,
    CoalesceAssignmentExpression,

    VariableDeclaration,
    FunctionDeclaration,
    StructDeclaration,
    PropertyDeclaration,
    LocalDeclaration,

    EmptyExpression,
    StatementExpression,
    BlockExpression,
    ArrayExpression,
    StructExpression,
    PropertyExpression,

    UnaryPlusExpression,
    UnaryMinusExpression,
    PrefixIncrementExpression,
    PrefixDecrementExpression,
    OnesComplementExpression,
    NotExpression,

    AddExpression,
    SubtractExpression,
    MultiplyExpression,
    DivideExpression,
    ModuloExpression,
    PowerExpression,
    LeftShiftExpression,
    RightShiftExpression,
    LogicalOrExpression,
    LogicalAndExpression,
    BitwiseOrExpression,
    BitwiseAndExpression,
    ExclusiveOrExpression,
    EqualsExpression,
    NotEqualsExpression,
    LessThanExpression,
    LessThanOrEqualExpression,
    GreaterThanExpression,
    GreaterThanOrEqualExpression,
    CoalesceExpression,

    Function,
    Parameter,
    Struct,
    Property,
    Variable,

    UnaryPlusOperator,
    UnaryMinusOperator,
    PrefixIncrementOperator,
    PrefixDecrementOperator,
    OnesComplementOperator,
    NotOperator,

    AddOperator,
    SubtractOperator,
    MultiplyOperator,
    DivideOperator,
    ModuloOperator,
    PowerOperator,
    LeftShiftOperator,
    RightShiftOperator,
    LogicalOrOperator,
    LogicalAndOperator,
    BitwiseOrOperator,
    BitwiseAndOperator,
    ExclusiveOrOperator,
    EqualsOperator,
    NotEqualsOperator,
    LessThanOperator,
    LessThanOrEqualOperator,
    GreaterThanOperator,
    GreaterThanOrEqualOperator,
    CoalesceOperator,
}
